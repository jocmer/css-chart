@property --py {
  syntax: "<number>";
  inherits: false;
  initial-value: 0;
}

@keyframes grow {
  from {
    --py: 0;
  }

  to {
    --py: 100;
  }
}

@keyframes grow2 {
  from {
    --py: 0;
  }
  to {
    --py: 100;
  }
}


@keyframes fade {
  0% {
    opacity: 0;
  }

  50% {
    opacity: 0;
  }

  100% {
    
  }
}

div {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body, html {
  height: 100%;
  overflow: hidden;
}

.container {
  width: auto;
  height: 100%;
}

.css-chart {
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

.overlay {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.css-chart-header {
  text-align: center;
  padding: 5px 5px;
}

.css-chart-header .title {
  
}

.legend {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  width: 100%;
  font-size: 11px;
}

.legend .item {
  padding: 2px 2px;
  cursor: pointer;
}

.legend .item .color {
  float: left;
  width: 24px;
  height: 11px;
  margin-right: 5px;
  opacity: 0.6;
}

.legend .item.disabled .color {
  background: lightgray !important;
  border: 1px solid black !important;
}

.legend .item .label {
  float: left;
  font-weight: bold;
}

.legend .item.disabled .label {
  text-decoration: line-through;
}

.css-chart-footer {
  bottom: 0;
  left: 0;
  text-align: center;
}

.css-chart-wrapper {
  height: 100%;
  padding: 0px 50px 50px 50px;
}

.css-chart-content {
  width: 100%;
  height: 100%;

  color: var(--gridcolor);

  position: relative;
}

.bar-chart {
  --offset-y: calc((var(--range) - var(--max-y-value)) / var(--range) * var(--grid-height));
  list-style: none;
  margin: 0;
  padding: 0;
}

.bar-chart.disabled {
  display: none;
}

.bar-chart li {
  --py: 100;
  --width: calc((var(--grid-width) / var(--max-x-value) - 20px) / var(--items));
  position: absolute;
  opacity: var(--opacity);
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width) + var(--i) * var(--width) + 10px);
  bottom: var(--offset-y);
  width: var(--width);
  height: calc((var(--y) * (var(--py) / 100)) / var(--range) * var(--grid-height));
  background: var(--primary-color);
  border: 1px solid var(--secondary-color);
  animation: grow 1s ease-out;
}

.bar-chart li.negative {
  --height: calc((var(--y) * (var(--py) / 100)) * -1 / var(--range) * var(--grid-height));
  bottom: calc(var(--offset-y) + var(--height) * -1) !important;
  height: var(--height) !important;
  animation: grow2 1s ease-out !important;
}

.bar-chart.grouped li {
  --width: calc(var(--grid-width) / var(--max-x-value) - 20px);
  position: absolute;
  opacity: var(--opacity);
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width) + 10px);
  bottom: var(--offset-y);
  width: var(--width);
  height: calc(var(--y) / var(--range) * var(--grid-height));
  background: var(--primary-color);
  border: 1px solid var(--secondary-color);
  animation: grow 1s ease-out;
}

.bar-chart li:hover::before {
  content: attr(data-label) " " attr(data-value);
  padding: 5px;
  color: white;
  background: rgba(0,0,0,0.8);
  border-radius: 10px;
  font-size: 12px;
  font-weight: bolder;
  position: absolute;
  top: -50px;

  z-index: 100000;
  opacity: 1.0;
}

.bar-chart li.negative:hover::before {
  top: unset !important;
  bottom: -50px;
  opacity: 1.0;
}

.line-chart {
  --offset-y: calc((var(--range) - var(--max-y-value)) / var(--range) * var(--grid-height));
  list-style: none;
  margin: 0;
  padding: 0;
}

.line-chart.disabled {
  display: none;
}

@keyframes point {
  from {
    bottom: 0px;
  }

  to {
  }
}

.line-chart .data-point {
  background: var(--secondary-color);
  border: 2px solid var(--primary-color);
  border-radius: 50%;

  position: absolute;

  width: 12px;
  height: 12px;

  bottom: calc(var(--offset-y) + var(--y) / var(--range) * var(--grid-height) - 6px);
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width) - 6px);

  animation: point 0.5s ease-in;

  z-index: 1000;
}

.line-chart .data-point:hover {
  width: 15px;
  height: 15px;
  cursor: pointer;
}

.line-chart.centered .data-point {
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width) - 6px + var(--grid-width) / 12 / 2) !important;
}

.line-chart .data-point:hover::before {
  transition: 0.2s;
  content: attr(data-label) " " attr(data-value);
  color: var(--primary-color);
  opacity: 0.8;
  padding: 5px;
  color: white;
  background: black;
  border-radius: 10px;
  font-size: 12px;
  font-weight: bolder;
  position: absolute;
  top: -50px;

  z-index: 99999;
}

@keyframes segment {
  from {
    bottom: 0;
    transform: rotate(0deg);
    width: calc(var(--grid-width) / 12);
  }

  to {
  }
}

.line-chart .line-segment {
  background: var(--primary-color);
  opacity: var(--opacity);

  position: absolute;

  bottom: calc(var(--offset-y) + var(--y) / var(--range) * var(--grid-height));
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width));

  height: 3px;
  width: calc(var(--hypotenuse) * 1px);

  transform: rotate(calc(var(--angle) * 1deg));
  transform-origin: left bottom;

  animation: fade 1s ease-in-out;

  z-index: 900;
}

.line-chart .line-segment:hover {
  cursor: pointer;
  height: 3px;
  opacity: 1;
}

.line-chart.centered .line-segment {
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width) + var(--grid-width) / 12 / 2) !important;
}

.line-chart .line-fill {
  position: absolute;
  bottom: 0;
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width));
  height: calc(min(var(--offset-y) + var(--y) / var(--range) * var(--grid-height), var(--offset-y) + var(--y) / var(--range) * var(--grid-height) + var(--c) * -1));
  width: calc(1 / var(--max-x-value) * var(--grid-width));
  background: var(--primary-color);
  animation: fade 1s ease-in-out;

  z-index: 800;
  opacity: 0.5;
}

.line-chart.centered .line-fill {
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width) + var(--grid-width) / 12 / 2) !important;
}

.line-chart .line-fill-tri {
  position: absolute;

  bottom: calc(var(--offset-y) + var(--y) / var(--range) * var(--grid-height) - max(0px, var(--c)));
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width));

  height: 0px;
  width: 0px;

  --width: var(--aa);
  --height: var(--ac);
  
  animation: fade 1s ease-in-out;

  z-index: 800;
  opacity: 0.5;
}

.line-chart.centered .line-fill-tri {
  left: calc(var(--x) / var(--max-x-value) * var(--grid-width) + var(--grid-width) / 12 / 2) !important;
}

.line-chart .line-fill-tri.left {
  border-color: transparent transparent transparent var(--primary-color);
  border-style: solid;
  border-width: var(--height) 0px 0px var(--width);
  height: 0px;
  width: 0px;
}

.line-chart .line-fill-tri.right {
  border-color: transparent var(--primary-color) transparent transparent;
    border-style: solid;
    border-width: var(--height) var(--width) 0px 0px;
    height: 0px;
    width: 0px;
}

.css-chart-xaxis {
  list-style: none;
}

.css-chart-xaxis li {
  font-size: 80%;
  position: absolute;
  bottom: -25px;
  text-align: center;
  width: calc(var(--grid-width) / var(--labels));
  left: calc(
    (var(--i) * var(--grid-width) / var(--labels)) -
      (calc((var(--grid-width) / var(--labels) / 2)))
  );
}

.css-chart-xaxis.centered li {
  left: calc((var(--i) * var(--grid-width) / var(--labels))) !important;
}

.css-chart-xaxis li:before {
  content: "";
  position: absolute;
  bottom: 20px;
  height: 5px;
  width: 1px;
  background: var(--gridcolor);
}

.css-chart-xaxis li:before {
  left: calc(50%);
}

.css-chart-xaxis.centered li:before {
  left: 0 !important;
}

.css-chart-xaxis li:first-child::before {
}

.css-chart-yaxis {
  list-style: none;
}

.css-chart-yaxis li {
  z-index: -1;
  font-size: 80%;
  position: absolute;
  bottom: calc(var(--i) * var(--grid-height) / var(--steps) - 10px);
  left: -30px;
  height: 20px;
}

.css-chart-yaxis li:before {
  z-index: -1;
  content: "";
  position: absolute;
  bottom: calc(50%);
  left: 26px;
  height: 1px;
  width: 5px;
  background: var(--gridcolor);
}

.css-chart-yaxis li:first-child::before {
}

.css-chart-xgrid {
  list-style: none;
}

.css-chart-xgrid li {
  z-index: -1;
  position: absolute;
  left: 0;
  bottom: calc(var(--i) * var(--grid-height) / var(--steps));
  width: calc(var(--grid-width));
  height: 1px;
  background: var(--gridcolor);
}

.css-chart-xgrid li.thicc {
  height: 2px !important;
}


.css-chart-ygrid {
  list-style: none;
}

.css-chart-ygrid li {
  z-index: -1;
  position: absolute;
  bottom: 0;
  width: 1px;
  left: calc(var(--i) * var(--grid-width) / var(--max-x-value));
  height: var(--grid-height);
  background: var(--gridcolor);
}

.css-chart-ygrid li.thicc {
  width: 2px !important;
}

.css-chart-ygrid.centered li {
  left: calc(var(--i) * var(--grid-width) / var(--max-x-value));
}

.pie-chart {
  margin-left: 0 auto;
  margin-right: 0 auto;
  width: calc(var(--pie-width) * 1px);
  height: calc(var(--pie-height) * 1px);
  border-radius: 50%;
  aspect-ratio: 1;
  position: relative;
  display: inline-grid;
  place-content: center;
}

.pie-chart .item {
  --percentage: calc(var(--value) / var(--sum) * 100%);

  position: absolute;
  border-radius: 50%;
  inset: 0;
  transform: rotate(calc(360deg * (var(--offset) / var(--sum))));
  background: conic-gradient(var(--primary-color) calc(var(--percentage)),#0000 0);
  opacity: 0.9;
  margin: 5px;
  cursor: pointer;
}

.pie-chart .item:hover {
  opacity: 0.7;
  margin: 10px;
}


.pie-chart .item.disabled {
  visibility: hidden;
}